{"version":3,"sources":["App.js","index.js"],"names":["Marked","require","setOptions","renderer","Renderer","pedantic","gfm","tables","breaks","sanitize","smartLists","smartypants","xhtml","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","value","placeholderText","e","setState","target","__html","react_default","a","createElement","id","onChange","defaultValue","dangerouslySetInnerHTML","handleMarkUp","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0NAIMA,EAASC,EAAQ,IAEvBD,EAAOE,WAAW,CACdC,SAAU,IAAIH,EAAOI,SAIrBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,QAGLC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKU,MAAQ,CACTC,MAAOC,GAJIZ,4EAQNa,GACTV,KAAKW,SAAS,CAAEH,MAAOE,EAAEE,OAAOJ,+CAKhC,MAAO,CAAEK,OAAQ/B,EAAOkB,KAAKO,MAAMC,yCAInC,OACIM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,YACAC,GAAG,SACHC,SAAUlB,KAAKI,aACfe,aAAcnB,KAAKO,MAAMC,QAEzBM,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJG,wBAAyBpB,KAAKqB,yBA7BhCC,IAAMC,WAqClBd,EAAe,moBAoBNd,ICxEf6B,IAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MACZC,SAASC,eAAe","file":"static/js/main.a13f250f.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n// const Remarkable = require('remarkable');\nconst Marked = require('marked');\n\nMarked.setOptions({\n    renderer: new Marked.Renderer(),\n    // highlight: function(code) {\n    // return require('highlight.js').highlightAuto(code).value;\n    // },\n    pedantic: false,\n    gfm: true,\n    tables: true,\n    breaks: true,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false\n});\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            value: placeholderText\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleMarkUp() {\n        // const markup = new Remarkable();\n        return { __html: Marked(this.state.value) };\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Go on, enter some more markdown. I've given it a start.</h2>\n                <textarea\n                id=\"editor\"\n                onChange={this.handleChange}\n                defaultValue={this.state.value}\n                />\n                <div id=\"preview\"\n                    dangerouslySetInnerHTML={this.handleMarkUp()}\n                />\n            </div>\n        );\n    }\n}\n\n\nconst placeholderText =\n`# Welcome to my Markdown Previewer. \\n## Thanks for checking it out. \\n\\n Here's a [link](http://mkdolor.com) to my website. \\n\nA little code \\`const cool = true;\\` and a code block:\n\\`\\`\\`\nconstructor(props) {\n    \\tsuper(props);\n    \\tthis.state = {\n        \\t\\tvalue: placeholderText\n    \\t};\n\\`\\`\\`\nA list of exciting things:\n  - bullets\n    - etc.\n\n> We can do quotes, like this one.\nAnd **bold** words like that one.\nAnd last, but not least we can embed images:\n![freeCodeCamp Logo](https://github.com/FreeCodeCamp/assets/blob/master/assets/logos/600x72%20Free%20Code%20Camp%20logo%20for%20Medium%20publication.png?raw=true)\n`\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from \"./App\"\n\n\nReactDOM.render(<App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}