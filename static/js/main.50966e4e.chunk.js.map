{"version":3,"sources":["App.js","index.js"],"names":["Marked","require","setOptions","renderer","Renderer","highlight","code","highlightAuto","value","pedantic","gfm","tables","breaks","sanitize","smartLists","smartypants","xhtml","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","placeholderText","e","setState","target","__html","react_default","a","createElement","id","class","onChange","defaultValue","dangerouslySetInnerHTML","handleMarkUp","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4NAKMA,EAASC,EAAQ,IAEvBD,EAAOE,WAAW,CACdC,SAAU,IAAIH,EAAOI,SACrBC,UAAW,SAASC,GAChB,OAAOL,EAAQ,IAAgBM,cAAcD,GAAME,OAEvDC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,QAGLC,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKU,MAAQ,CACTrB,MAAOsB,GAJIX,4EAQNY,GACTT,KAAKU,SAAS,CAAExB,MAAOuB,EAAEE,OAAOzB,+CAMhC,MAAO,CAAE0B,OAAQlC,EAAOsB,KAAKO,MAAMrB,yCAInC,OACI2B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACJH,EAAAC,EAAAC,cAAA,MAAIC,GAAG,SAAP,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACJH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,OACPJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,YACPJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,QACPJ,EAAAC,EAAAC,cAAA,YACAC,GAAG,SACHE,SAAUlB,KAAKI,aACfe,aAAcnB,KAAKO,MAAMrB,UAIjC2B,EAAAC,EAAAC,cAAA,OAAKE,MAAM,YACPJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,QACPJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJI,wBAAyBpB,KAAKqB,8BAvCpDC,IAAMC,WAoDlBf,EAAe,k1BA8BNb,IClGf6B,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MACZC,SAASC,eAAe","file":"static/js/main.50966e4e.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n// import hljs from 'highlight.js';\n\n// const Remarkable = require('remarkable');\nconst Marked = require('marked');\n\nMarked.setOptions({\n    renderer: new Marked.Renderer(),\n    highlight: function(code) {\n        return require('highlight.js').highlightAuto(code).value;\n    },\n    pedantic: false,\n    gfm: true,\n    tables: true,\n    breaks: true,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false\n});\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            value: placeholderText\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleMarkUp() {\n        // const markup = new Remarkable();\n        // return { __html: markup.render(this.state.value) }\n        return { __html: Marked(this.state.value) };\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"container-fluid\">\n                    <h1 id=\"title\">Markdown Previewer</h1>\n                    <div id=\"frame\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"well\">\n                                    <textarea\n                                    id=\"editor\"\n                                    onChange={this.handleChange}\n                                    defaultValue={this.state.value}\n                                    />\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"well\">\n                                    <div id=\"preview\"\n                                        dangerouslySetInnerHTML={this.handleMarkUp()}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst placeholderText =\n`# Thanks for checking this out. \\n---\\n## Go on, enter some more markdown anywhere in the box on the left. \\n\\n ---\\nHere's a [link](https://markdownlivepreview.com) to the site that inspired the design of this one. \\n\n\nA little code \\`const cool = true;\\` and a code block:\n\\`\\`\\`\nconstructor(props) {\n    \\tsuper(props);\n    \\tthis.state = {\n        \\t\\tvalue: placeholderText\n    \\t};\n\\`\\`\\`\nA list of exciting things:\n  - bullets\n    - etc.\n\nA few intriguing bullets:\n1. bullet\n1. bullets\n1. bullets\n1. .\n\n> This should be an indented block quote. like this one. _Unfortunately, the greying out effect and indentation don't appear to be working right now._\n\nAnd **bold** words like that one.\n\nAnd last, but not least we can embed images:\n![a couple owls](https://openclipart.org/image/200px/svg_to_png/302992/1528491676.png)\n`\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from \"./App\"\n\n\nReactDOM.render(<App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}